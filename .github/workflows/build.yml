name: Build and Release

on: [push, pull_request, workflow_dispatch]

env:
  BUILD_TYPE: Release

permissions:
  contents: write  # Ensure the token has permission to push release artifacts

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Cache build dependencies
      uses: actions/cache@v3
      with:
        path: build/
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-deps-
          
    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Install Dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'  # Only run this on Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev

    - name: Install Dependencies (macOS)
      if: matrix.os == 'macos-latest'  # Only run this on macOS
      run: |
        brew install freeglut

    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'  # Only run this on Windows
      run: |
        choco install freeglut

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DENABLE_TESTING="OFF" -DisStatic=ON

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: CPack
      run: cd build && cpack

    # - name: Create GitHub Release
    #   id: create_release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     files: ${{ github.workspace }}/build/Platformer*  # Modify this to match your packaged file
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
